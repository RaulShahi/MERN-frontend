{"version":3,"file":"static/js/191.3ec5c8c9.chunk.js","mappings":"0PAIaA,EAAW,yCAAG,4FAAe,OAANC,EAAM,EAANA,OAAM,kBAEjBC,EAAAA,EAAAA,IAAQ,GAAD,OAAIC,EAAAA,EAAAA,OAAcF,GAAQ,KAAD,EAAzC,OAARG,EAAQ,0BACLC,EAAAA,EAAAA,GAAeD,IAAS,0DAExBC,EAAAA,EAAAA,GAAc,OAAC,EAAD,yBAAC,KAAKD,WAAS,yDAEvC,gBAPuB,sCASXE,EAAY,yCAAG,8FAAwB,OAAfC,EAAO,EAAPA,QAASN,EAAM,EAANA,OAAM,kBAE3BC,EAAAA,EAAAA,KAAS,GAAD,OAAIC,EAAAA,EAAAA,QAAeI,EAASN,GAAQ,KAAD,EAApD,OAARG,EAAQ,0BACLC,EAAAA,EAAAA,GAAeD,IAAS,0DAExBC,EAAAA,EAAAA,GAAc,OAAC,EAAD,yBAAC,KAAKD,WAAS,yDAEvC,gBAPwB,sCASZI,EAAS,yCAAG,8FAAwB,OAAfD,EAAO,EAAPA,QAASN,EAAM,EAANA,OAAM,kBAExBC,EAAAA,EAAAA,KAAS,GAAD,OAAIC,EAAAA,EAAAA,OAAcI,EAASN,GAAQ,KAAD,EAAnD,OAARG,EAAQ,0BACLC,EAAAA,EAAAA,GAAeD,IAAS,0DAExBC,EAAAA,EAAAA,GAAc,OAAC,EAAD,yBAAC,KAAKD,WAAS,yDAEvC,gBAPqB,qC,iGC8CtB,MAjEA,SAAqB,GAAqC,IAAnCK,EAAE,EAAFA,GAAIC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAASC,EAAS,EAATA,UAC1C,GAAwBC,EAAAA,EAAAA,YAAU,eAA3BC,EAAI,KAAEC,EAAO,KACpB,GAAoCF,EAAAA,EAAAA,YAAU,eAAvCG,EAAU,KAAEC,EAAa,KAChC,GAA8BJ,EAAAA,EAAAA,WAAS,GAAM,eAAtCK,EAAO,KAAEC,EAAU,KAEpBC,GAAgBC,EAAAA,EAAAA,UAgCtB,OAXAC,EAAAA,EAAAA,YAAU,WACR,GAAKR,EAAL,CAGA,IAAMS,EAAa,IAAIC,WACvBD,EAAWE,OAAS,WAClBR,EAAcM,EAAWG,OAC3B,EACAH,EAAWI,cAAcb,EALzB,CAMF,GAAG,CAACA,KAGF,iBAAKc,UAAU,eAAc,WAC3B,kBACEnB,GAAIA,EACJoB,KAAK,QACLC,IAAKV,EACLW,MAAO,CAAEC,QAAS,QAClBC,KAAK,OACLC,OAAO,oBACPC,SAvCgB,SAACC,GACrB,IAAIC,EACAC,EAAcpB,EACdkB,EAAEG,OAAOC,OAAmC,IAA1BJ,EAAEG,OAAOC,MAAMC,QACnCJ,EAAaD,EAAEG,OAAOC,MAAM,GAC5BzB,EAAQsB,GACRlB,GAAW,GACXmB,GAAc,IAEdnB,GAAW,GACXmB,GAAc,GAEhB3B,EAAQF,EAAI4B,EAAYC,EAC1B,KA4BI,iBAAKV,UAAS,uBAAkBlB,GAAU,UAAW,WACnD,gBAAKkB,UAAU,wBAAuB,SACnCZ,GACC,gBAAK0B,IAAK1B,EAAY2B,IAAI,aAE1B,uBAAG,6BAGP,SAACC,EAAA,EAAM,CAACX,KAAK,SAASY,QAlCH,WACvBzB,EAAc0B,QAAQC,OACxB,EAgCsD,SAAC,mBAIjD7B,IAAW,uBAAIN,MAGvB,C,0GC9DMoC,EAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAOjB,MACb,IAAK,SACH,OAAO,kBACFgB,GAAK,IACRE,MAAOD,EAAOE,IACdlC,SAASmC,EAAAA,EAAAA,IAASH,EAAOE,IAAKF,EAAOI,cAEzC,IAAK,QACH,OAAO,kBACFL,GAAK,IACRM,WAAW,IAEf,QACE,OAAON,EAEb,EAEe,SAASO,EAAM,GAY1B,IAXFC,EAAK,EAALA,MACAhD,EAAE,EAAFA,GACAiD,EAAO,EAAPA,QACAzB,EAAI,EAAJA,KACA0B,EAAW,EAAXA,YACAC,EAAI,EAAJA,KACAhD,EAAS,EAATA,UACA0C,EAAU,EAAVA,WACA3C,EAAO,EAAPA,QACAkD,EAAY,EAAZA,aACAC,EAAe,EAAfA,gBAEA,GAA+BC,EAAAA,EAAAA,YAAWf,EAAc,CACtDG,MAAOU,GAAgB,GACvB3C,QAAS4C,IAAmB,EAC5BP,WAAW,IACX,eAJKS,EAAU,KAAEC,EAAQ,KAKnBd,EAAmBa,EAAnBb,MAAOjC,EAAY8C,EAAZ9C,SACfI,EAAAA,EAAAA,YAAU,WACRX,EAAQF,EAAI0C,EAAOjC,EACrB,GAAG,CAACT,EAAI0C,EAAOjC,EAASP,IAExB,IAAMuD,EAAgB,SAACC,GACrBF,EAAS,CACPhC,KAAM,SACNmB,IAAKe,EAAM5B,OAAOY,MAClBG,WAAYA,GAEhB,EAEMc,EAAe,WACnBH,EAAS,CACPhC,KAAM,SAEV,EACMoC,EACQ,UAAZX,GACE,kBACEjD,GAAIA,EACJwB,KAAMA,EACN0B,YAAaA,EACbxB,SAAU+B,EACVf,MAAOa,EAAWb,MAClBmB,OAAQF,EACRG,aAAa,WAGf,qBACE9D,GAAIA,EACJmD,KAAMA,GAAQ,EACdzB,SAAU+B,EACVf,MAAOa,EAAWb,MAClBmB,OAAQF,IAId,OACE,iBACExC,UAAS,wBACNoC,EAAW9C,SAAW8C,EAAWT,WAAa,yBAC9C,WAEH,kBAAOiB,QAAS/D,EAAG,SAAEgD,IACpBY,GACCL,EAAW9C,SAAW8C,EAAWT,YAAa,uBAAI3C,MAG1D,C,kGCxFM6D,EAAc,SAACxB,EAAOC,GAC1B,OAAQA,EAAOjB,MACb,IAAK,eACH,IAAIyC,GAAc,EAClB,IAAK,IAAMC,KAAW1B,EAAM2B,OACrB3B,EAAM2B,OAAOD,KAIhBD,EADEC,IAAYzB,EAAOyB,QACPD,GAAexB,EAAOhC,QAEtBwD,GAAezB,EAAM2B,OAAOD,GAASzD,SAGvD,OAAO,kBACF+B,GAAK,IACR2B,QAAO,kBACF3B,EAAM2B,QAAM,cACd1B,EAAOyB,QAAU,CAAExB,MAAOD,EAAOC,MAAOjC,QAASgC,EAAOhC,WAE3DA,QAASwD,IAEb,IAAK,WACH,MAAO,CACLE,OAAQ1B,EAAO0B,OACfC,SAAU3B,EAAOwB,aAErB,QACE,OAAOzB,EAEb,EACa6B,EAAU,SAACC,EAAeC,GACrC,OAA8BjB,EAAAA,EAAAA,YAAWU,EAAa,CACpDG,OAAQG,EACR7D,QAAS8D,IACT,eAHKC,EAAS,KAAEhB,EAAQ,KAsB1B,MAAO,CAACgB,GAjBaC,EAAAA,EAAAA,cAAY,SAACzE,EAAI0C,EAAOjC,GAC3C+C,EAAS,CACPhC,KAAM,eACNkB,MAAOA,EACPjC,QAASA,EACTyD,QAASlE,GAEb,GAAG,KAEiByE,EAAAA,EAAAA,cAAY,SAACC,EAAWC,GAC1CnB,EAAS,CACPhC,KAAM,WACN2C,OAAQO,EACRT,YAAaU,GAEjB,GAAG,IAGL,C,6ICzDA,IAAMC,EAAyB,UACzBC,EAA2B,YAC3BC,EAA2B,YAG3BC,EAAuB,QAGhBC,EAAoB,WAAH,MAAU,CAAExD,KAAMoD,EAAwB,EAE3DK,EAAsB,SAACtC,GAAG,MAAM,CAC3CnB,KAAMqD,EACNlC,IAAKA,EACN,EAOYuC,EAAkB,WAAH,MAAU,CAAE1D,KAAMuD,EAAsB,EAEvDnC,EAAW,SAACF,EAAOG,GAC9B,IACkC,EAD9BpC,GAAU,EAAK,ECtBN,SAAoC0E,EAAGC,GACpD,IAAIC,EAAuB,qBAAXC,QAA0BH,EAAEG,OAAOC,WAAaJ,EAAE,cAClE,IAAKE,EAAI,CACP,GAAIG,MAAMC,QAAQN,KAAOE,GAAK,EAAAK,EAAA,GAA2BP,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAEnD,OAAqB,CAC/GqD,IAAIF,EAAIE,GACZ,IAAIM,EAAI,EACJC,EAAI,WAAc,EACtB,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKR,EAAEnD,OAAe,CACxB+D,MAAM,GAED,CACLA,MAAM,EACNrD,MAAOyC,EAAEQ,KAEb,EACAhE,EAAG,SAAWqE,GACZ,MAAMA,CACR,EACAC,EAAGL,EAEP,CACA,MAAM,IAAIM,UAAU,wIACtB,CACA,IAEEC,EAFEC,GAAmB,EACrBC,GAAS,EAEX,MAAO,CACLR,EAAG,WACDR,EAAKA,EAAGiB,KAAKnB,EACf,EACAW,EAAG,WACD,IAAIS,EAAOlB,EAAGmB,OAEd,OADAJ,EAAmBG,EAAKR,KACjBQ,CACT,EACA5E,EAAG,SAAW8E,GACZJ,GAAS,EACTF,EAAMM,CACR,EACAR,EAAG,WACD,IACOG,GAAoC,MAAhBf,EAAW,QAAWA,EAAW,QAG5D,CAFE,QACA,GAAIgB,EAAQ,MAAMF,CACpB,CACF,EAEJ,CD5BqB,CACKtD,GAAU,IAAlC,2BAAoC,CAAC,IAA1B6D,EAAS,QACdA,EAAUlF,OAASoD,IACrBnE,EAAUA,GAAWiC,EAAMiE,OAAO3E,OAAS,GAEzC0E,EAAUlF,OAASqD,IACrBpE,EAAUA,GAAWiC,EAAMiE,OAAO3E,QAAU0E,EAAU/D,KAEpD+D,EAAUlF,OAASsD,IACrBrE,EAAUA,GAAWiC,EAAMiE,OAAO3E,QAAU0E,EAAU/D,KA7BjC,QA+BnB+D,EAAUlF,OACZf,EAAUA,IAAYiC,GAASgE,EAAU/D,KA/BpB,QAiCnB+D,EAAUlF,OACZf,EAAUA,IAAYiC,GAASgE,EAAU/D,KAEvC+D,EAAUlF,OAASuD,IACrBtE,EAAUA,GAAW,iBAAiBmG,KAAKlE,GAE/C,CAAC,+BACD,OAAOjC,CACT,C,+OE2GA,MAtIA,WACE,OAAsCL,EAAAA,EAAAA,WAAS,GAAK,eAA7CyG,EAAW,KAAEC,EAAc,KAE1BC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAArBF,MAER,GAA+C1C,EAAAA,EAAAA,GAC7C,CACE6C,MAAO,CACLxE,MAAO,GACPjC,SAAS,GAEX0G,SAAU,CACRzE,MAAO,GACPjC,SAAS,KAGb,GACD,eAZM+D,EAAS,KAAE4C,EAAY,KAAEC,EAAW,KAa3C,GAAsDC,EAAAA,EAAAA,KAA9CC,EAAS,EAATA,UAAWC,EAAK,EAALA,MAAOC,EAAU,EAAVA,WAAYC,EAAW,EAAXA,YAqBhCC,EAAiB,yCAAG,WAAOhG,GAAC,0GAEI,GADpCA,EAAEiG,iBAAiB,EACsBpD,EAAUL,OAA3C+C,EAAK,EAALA,MAAO9F,EAAI,EAAJA,KAAM+F,EAAQ,EAARA,SAAUU,EAAK,EAALA,MAC1BhB,EAAY,CAAD,gBAM2B,OAN3B,UAENiB,EAAW,IAAIC,UACZC,OAAO,QAAc,OAALd,QAAK,IAALA,OAAK,EAALA,EAAOxE,OAChCoF,EAASE,OAAO,OAAY,OAAJ5G,QAAI,IAAJA,OAAI,EAAJA,EAAMsB,OAC9BoF,EAASE,OAAO,WAAoB,OAARb,QAAQ,IAARA,OAAQ,EAARA,EAAUzE,OACtCoF,EAASE,OAAO,QAAc,OAALH,QAAK,IAALA,OAAK,EAALA,EAAOnF,OAAO,UAChBgF,EAAY,CACjCO,GAAIpI,EAAAA,GACJC,QAASgI,IACR,KAAD,GAGe,OANXnI,EAAQ,SAIgB,OAARA,QAAQ,IAARA,GAAc,QAAN,EAARA,EAAUuI,YAAI,WAAN,EAAR,EAAgBC,KAA9BnI,EAAE,EAAFA,GAAIoI,EAAK,EAALA,MAEZrB,EAAM/G,EAAIoI,GAAO,2BAGA,OAHA,0BAGjBC,QAAQC,IAAI,EAAD,IAAM,sDAKIZ,EAAY,CACjCO,GAAIlI,EAAAA,GACJD,QAAS,CACPoH,MAAY,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOxE,MACdyE,SAAkB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUzE,SAErB,KAAD,GANI/C,EAAQ,SAOgB,OAARA,QAAQ,IAARA,GAAc,QAAN,EAARA,EAAUuI,YAAI,WAAN,EAAR,EAAgBC,KAA9BnI,EAAE,EAAFA,GAAIoI,EAAK,EAALA,MAEZrB,EAAM/G,EAAIoI,GAAO,mDAEjBC,QAAQC,IAAI,EAAD,IAAM,kEAEpB,gBArCsB,sCAsCvB,OACE,iCACE,SAACC,EAAA,EAAU,CAACf,MAAOA,EAAOgB,QAASf,KACnC,UAACgB,EAAA,EAAI,CAACtH,UAAU,iBAAgB,UAC7BoG,IAAa,SAACmB,EAAA,EAAc,CAACC,WAAS,KACvC,wBAAI,oBACJ,mBACA,kBAAMC,SAAUjB,EAAmBkB,QAAQ,sBAAqB,WAC5DhC,IACA,SAAC9D,EAAA,EAAK,CACJE,QAAQ,QACRjD,GAAG,OACHwB,KAAK,OACLwB,MAAM,YACNH,WAAY,EAACmC,EAAAA,EAAAA,OACb7E,UAAU,uBACVD,QAASkH,KAGXP,IACA,SAACiC,EAAA,EAAW,CACV7I,QAAM,EACND,GAAG,QACHE,QAASkH,EACTjH,UAAU,8BAGd,SAAC4C,EAAA,EAAK,CACJE,QAAQ,QACRjD,GAAG,QACHwB,KAAK,OACLwB,MAAM,SACNH,WAAY,EAACqC,EAAAA,EAAAA,OACb/E,UAAU,8BACVD,QAASkH,KAEX,SAACrE,EAAA,EAAK,CACJE,QAAQ,QACRjD,GAAG,WACHwB,KAAK,WACLwB,MAAM,WACNH,WAAY,EAACoC,EAAAA,EAAAA,IAAoB,IACjC9E,UAAU,uDACVD,QAASkH,KAEX,SAACjF,EAAA,EAAM,CAACX,KAAK,SAASuH,UAAWvE,EAAU/D,QAAQ,SAChDoG,EAAc,QAAU,eAG7B,UAAC1E,EAAA,EAAM,CAAC6G,SAAO,EAAC5G,QA1GI,WACnByE,EAMHQ,GAAY,kBAEL7C,EAAUL,QAAM,IACnB/C,KAAM,CAAEsB,MAAO,GAAIjC,SAAS,GAC5BoH,MAAO,CAAEnF,MAAO,KAAMjC,SAAS,MAEjC,GAXF4G,GAAY,kBACL7C,EAAUL,QAAM,IAAE/C,UAAM6H,EAAWpB,WAAOoB,IAC/CzE,EAAUL,OAAO+C,MAAMzG,SAAW+D,EAAUL,OAAOgD,SAAS1G,SAYhEqG,GAAe,SAACoC,GAAI,OAAMA,CAAI,GAChC,EAyFiD,UAAC,aAC/BrC,EAAc,SAAW,gBAK9C,C","sources":["services/users/index.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","user/pages/Auth.js"],"sourcesContent":["import API from \"../../helpers/api\";\r\nimport { getApiResponse } from \"../../helpers/getApiResponse\";\r\nimport { Apis } from \"../api\";\r\n\r\nexport const getAllUsers = async ({ config }) => {\r\n  try {\r\n    let response = await API.get(`${Apis.Users}`, config);\r\n    return getApiResponse(response);\r\n  } catch (err) {\r\n    return getApiResponse(err?.response);\r\n  }\r\n};\r\n\r\nexport const registerUser = async ({ payload, config }) => {\r\n  try {\r\n    let response = await API.post(`${Apis.Signup}`, payload, config);\r\n    return getApiResponse(response);\r\n  } catch (err) {\r\n    return getApiResponse(err?.response);\r\n  }\r\n};\r\n\r\nexport const loginUser = async ({ payload, config }) => {\r\n  try {\r\n    let response = await API.post(`${Apis.Login}`, payload, config);\r\n    return getApiResponse(response);\r\n  } catch (err) {\r\n    return getApiResponse(err?.response);\r\n  }\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./ImageUpload.css\";\r\nimport Button from \"./Button\";\r\nfunction ImageUpload({ id, center, onInput, errorText }) {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  const pickedHandler = (e) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (e.target.files && e.target.files.length === 1) {\r\n      pickedFile = e.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    onInput(id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={id}\r\n        name=\"image\"\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg, .png, .jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl ? (\r\n            <img src={previewUrl} alt=\"Preview\" />\r\n          ) : (\r\n            <p>Please pick an image.</p>\r\n          )}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUpload;\r\n","import React, { useEffect, useReducer } from \"react\";\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function Input({\r\n  label,\r\n  id,\r\n  element,\r\n  type,\r\n  placeholder,\r\n  rows,\r\n  errorText,\r\n  validators,\r\n  onInput,\r\n  initialValue,\r\n  initialValidity,\r\n}) {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: initialValue || \"\",\r\n    isValid: initialValidity || false,\r\n    isTouched: false,\r\n  });\r\n  const { value, isValid } = inputState;\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n  const el =\r\n    element === \"input\" ? (\r\n      <input\r\n        id={id}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n        onBlur={touchHandler}\r\n        autocomplete=\"false\"\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={id}\r\n        rows={rows || 3}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n        onBlur={touchHandler}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={id}>{label}</label>\r\n      {el}\r\n      {!inputState.isValid && inputState.isTouched && <p>{errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        validity: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useContext, useState } from \"react\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport \"./Auth.css\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { loginUser, registerUser } from \"../../services/users\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { useHttp } from \"../../shared/hooks/http-hook\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nfunction Auth() {\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n\r\n  const { login } = useContext(AuthContext);\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n  const { isLoading, error, clearError, sendRequest } = useHttp();\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        { ...formState.inputs, name: undefined, image: undefined },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: { value: \"\", isValid: false },\r\n          image: { value: null, isValid: false },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prev) => !prev);\r\n  };\r\n\r\n  const authSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    const { email, name, password, image } = formState.inputs;\r\n    if (!isLoginMode) {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", email?.value);\r\n        formData.append(\"name\", name?.value);\r\n        formData.append(\"password\", password?.value);\r\n        formData.append(\"image\", image?.value);\r\n        const response = await sendRequest({\r\n          fn: registerUser,\r\n          payload: formData,\r\n        });\r\n        const { id, token } = response?.data?.user;\r\n\r\n        login(id, token);\r\n        return;\r\n      } catch (err) {\r\n        console.log(err);\r\n        return;\r\n      }\r\n    }\r\n    try {\r\n      const response = await sendRequest({\r\n        fn: loginUser,\r\n        payload: {\r\n          email: email?.value,\r\n          password: password?.value,\r\n        },\r\n      });\r\n      const { id, token } = response?.data?.user;\r\n\r\n      login(id, token);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler} enctype=\"multipart/form-data\">\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <ImageUpload\r\n              center\r\n              id=\"image\"\r\n              onInput={inputHandler}\r\n              errorText=\"Please provide an image.\"\r\n            />\r\n          )}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"text\"\r\n            label=\"E-mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password(at least 6 characters)\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n"],"names":["getAllUsers","config","API","Apis","response","getApiResponse","registerUser","payload","loginUser","id","center","onInput","errorText","useState","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","className","name","ref","style","display","type","accept","onChange","e","pickedFile","fileIsValid","target","files","length","src","alt","Button","onClick","current","click","inputReducer","state","action","value","val","validate","validators","isTouched","Input","label","element","placeholder","rows","initialValue","initialValidity","useReducer","inputState","dispatch","changeHandler","event","touchHandler","el","onBlur","autocomplete","htmlFor","formReducer","formIsValid","inputId","inputs","validity","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test","isLoginMode","setIsLoginMode","login","useContext","AuthContext","email","password","inputHandler","setFormData","useHttp","isLoading","error","clearError","sendRequest","authSubmitHandler","preventDefault","image","formData","FormData","append","fn","data","user","token","console","log","ErrorModal","onClear","Card","LoadingSpinner","asOverlay","onSubmit","enctype","ImageUpload","disabled","inverse","undefined","prev"],"sourceRoot":""}