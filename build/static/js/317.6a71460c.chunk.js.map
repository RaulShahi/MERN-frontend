{"version":3,"file":"static/js/317.6a71460c.chunk.js","mappings":"0OA6CA,UApCA,WACE,IAAQA,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAA4BE,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KACxB,GAAsDC,EAAAA,EAAAA,KAA9CC,EAAS,EAATA,UAA8BC,GAAd,EAALC,MAAiB,EAAVC,WAAuB,EAAXF,aAmBtC,OAjBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,yCAAG,2GACCJ,EAAY,CACjCK,GAAIC,EAAAA,GACJC,OAAQ,CAAEd,OAAAA,KACT,KAAD,EAHIe,EAAQ,OAIdX,EAAkB,OAARW,QAAQ,IAARA,GAAc,QAAN,EAARA,EAAUC,YAAI,WAAN,EAAR,EAAgBb,QAAQ,2CACnC,kBANoB,mCAOrBQ,GACF,GAAG,CAACJ,EAAaP,KASf,8BAEGM,GACC,gBAAKW,UAAU,SAAQ,UACrB,SAAC,IAAc,OAGjB,SAAC,IAAS,CAACC,MAAOf,EAAQgB,cAdJ,SAACC,GAC3BhB,GAAU,SAACiB,GAAU,OACnBA,EAAWC,QAAO,SAACC,GAAK,OAAKA,EAAMC,KAAOJ,CAAc,GAAC,GAE7D,KAcF,C","sources":["places/pages/UserPlaces.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PlaceList from \"../components/PlaceList\";\nimport { Place } from \"../../model/placeModal\";\nimport { useParams } from \"react-router-dom\";\nimport { useHttp } from \"../../shared/hooks/http-hook\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { getUserPlaces } from \"../../services/places\";\n\nfunction UserPlaces() {\n  const { userId } = useParams();\n  const [places, setPlaces] = useState([]);\n  const { isLoading, error, clearError, sendRequest } = useHttp();\n\n  useEffect(() => {\n    const fetchUserPlaces = async () => {\n      const response = await sendRequest({\n        fn: getUserPlaces,\n        params: { userId },\n      });\n      setPlaces(response?.data?.places);\n    };\n    fetchUserPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = (deletedPlaceId) => {\n    setPlaces((prevPlaces) =>\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <>\n      {/* <ErrorModal error={error} onClear={clearError} /> */}\n      {isLoading ? (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      ) : (\n        <PlaceList items={places} onDeletePlace={placeDeletedHandler} />\n      )}\n    </>\n  );\n}\n\nexport default UserPlaces;\n"],"names":["userId","useParams","useState","places","setPlaces","useHttp","isLoading","sendRequest","error","clearError","useEffect","fetchUserPlaces","fn","getUserPlaces","params","response","data","className","items","onDeletePlace","deletedPlaceId","prevPlaces","filter","place","id"],"sourceRoot":""}